<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="my.dao.FileChunkDOMapper">
  <resultMap id="BaseResultMap" type="bigfileupload.entity.FileChunkDO">
    <id column="file_id" jdbcType="BIGINT" property="fileId" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="upload_time" jdbcType="TIMESTAMP" property="uploadTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="file_size" jdbcType="BIGINT" property="fileSize" />
    <result column="total_chunks" jdbcType="BIGINT" property="totalChunks" />
    <result column="identifier" jdbcType="VARCHAR" property="identifier" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="file_type" jdbcType="VARCHAR" property="fileType" />
    <result column="relative_path" jdbcType="VARCHAR" property="relativePath" />
    <result column="version" jdbcType="VARCHAR" property="version" />
    <result column="reference_cnt" jdbcType="BIGINT" property="referenceCnt" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="local_path" jdbcType="VARCHAR" property="localPath" />
    <collection property="fileChunkDTOs" ofType="bigfileupload.entity.FileChunkDTO">
    	<id column="chunk_number" jdbcType="INTEGER" property="chunkNumber" />
    	<id column="file_identifier" jdbcType="VARCHAR" property="fileIdentifier" />
    	<id column="userid" jdbcType="BIGINT" property="userid" />
    	<result column="chunk_size" jdbcType="BIGINT" property="chunkSize" />
   		<result column="chunk_identifier" jdbcType="VARCHAR" property="chunkIdentifier" />
    	<result column="chunk_upload_time" jdbcType="TIMESTAMP" property="uploadTime" />
    </collection>
  </resultMap>
  <sql id="Base_Column_List">
    file_id, status, upload_time, update_time, parent_id, file_size, total_chunks, identifier, 
    file_name, file_type, relative_path, version, reference_cnt, `desc`, local_path
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from file_chunkdo
    where file_id = #{fileId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from file_chunkdo
    where file_id = #{fileId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="bigfileupload.entity.FileChunkDO" useGeneratedKeys="true" keyProperty="fileId">
    insert into file_chunkdo (file_id, status, upload_time, 
      update_time, parent_id, file_size, 
      total_chunks, identifier, file_name, 
      file_type, relative_path, version, 
      reference_cnt, `desc`, local_path) 
    values (#{fileId,jdbcType=BIGINT}, #{status,jdbcType=VARCHAR}, #{uploadTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{parentId,jdbcType=BIGINT}, #{fileSize,jdbcType=BIGINT}, 
      #{totalChunks,jdbcType=BIGINT}, #{identifier,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR}, 
      #{fileType,jdbcType=VARCHAR}, #{relativePath,jdbcType=VARCHAR}, #{version,jdbcType=VARCHAR}, 
      #{referenceCnt,jdbcType=BIGINT}, #{desc,jdbcType=VARCHAR}, #{localPath,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="bigfileupload.entity.FileChunkDO">
    insert into file_chunkdo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fileId != null">
        file_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="uploadTime != null">
        upload_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="fileSize != null">
        file_size,
      </if>
      <if test="totalChunks != null">
        total_chunks,
      </if>
      <if test="identifier != null">
        identifier,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="fileType != null">
        file_type,
      </if>
      <if test="relativePath != null">
        relative_path,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="referenceCnt != null">
        reference_cnt,
      </if>
      <if test="desc != null">
        `desc`,
      </if>
      <if test="localPath != null">
        local_path,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fileId != null">
        #{fileId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="uploadTime != null">
        #{uploadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="fileSize != null">
        #{fileSize,jdbcType=BIGINT},
      </if>
      <if test="totalChunks != null">
        #{totalChunks,jdbcType=BIGINT},
      </if>
      <if test="identifier != null">
        #{identifier,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null">
        #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="relativePath != null">
        #{relativePath,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="referenceCnt != null">
        #{referenceCnt,jdbcType=BIGINT},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="localPath != null">
        #{localPath,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="bigfileupload.entity.FileChunkDO">
    update file_chunkdo
    <set>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="uploadTime != null">
        upload_time = #{uploadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="fileSize != null">
        file_size = #{fileSize,jdbcType=BIGINT},
      </if>
      <if test="totalChunks != null">
        total_chunks = #{totalChunks,jdbcType=BIGINT},
      </if>
      <if test="identifier != null">
        identifier = #{identifier,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null">
        file_type = #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="relativePath != null">
        relative_path = #{relativePath,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="referenceCnt != null">
        reference_cnt = #{referenceCnt,jdbcType=BIGINT},
      </if>
      <if test="desc != null">
        `desc` = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="localPath != null">
        local_path = #{localPath,jdbcType=VARCHAR},
      </if>
    </set>
    where file_id = #{fileId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="bigfileupload.entity.FileChunkDO">
    update file_chunkdo
    set status = #{status,jdbcType=VARCHAR},
      upload_time = #{uploadTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      parent_id = #{parentId,jdbcType=BIGINT},
      file_size = #{fileSize,jdbcType=BIGINT},
      total_chunks = #{totalChunks,jdbcType=BIGINT},
      identifier = #{identifier,jdbcType=VARCHAR},
      file_name = #{fileName,jdbcType=VARCHAR},
      file_type = #{fileType,jdbcType=VARCHAR},
      relative_path = #{relativePath,jdbcType=VARCHAR},
      version = #{version,jdbcType=VARCHAR},
      reference_cnt = #{referenceCnt,jdbcType=BIGINT},
      `desc` = #{desc,jdbcType=VARCHAR},
      local_path = #{localPath,jdbcType=VARCHAR}
    where file_id = #{fileId,jdbcType=BIGINT}
  </update>
  
  <select id="listByMd5" resultMap="BaseResultMap">
    select *
    from file_chunkdo
    left join file_chunkdto
  	on file_chunkdo.identifier = file_chunkdto.file_identifier
    where 1 = 1
   	and identifier = #{md5,jdbcType=VARCHAR} 
  </select> 
  
  <select id="selectFile" resultMap="BaseResultMap">
    select *, file_chunkdto.upload_time as chunk_upload_time
    from file_chunkdo
    
    left join file_chunkdto
  	on file_chunkdo.identifier = file_chunkdto.file_identifier
  	
  	inner join file_ownership
  	on file_chunkdo.file_id = file_ownership.file_id
  	<if test="userId != null">
        and file_ownership.user_id = #{userId,jdbcType=BIGINT}
    </if>
  	
    where 1 = 1
   	<if test="fileId != null">
        and file_chunkdo.file_id = #{fileId,jdbcType=BIGINT}
    </if>
  </select>
</mapper>